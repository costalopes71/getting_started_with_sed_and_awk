#! /usr/bin/env bash

# generate-coverage-inserts.sh - Generate inserts for the tables jadlog_coverage and jadlog_deadline
#
# Autor:         Dothraki Team
# Maintainence:  Dothraki Team
#
# -------------------------------------------------------------------------------------------------------------------------------------- #
# This program will generate a sql file with the name inserts_result.sql containing the inserts for the table jadlog_coverage
# and jadlog_deadline. It must receive as parameter the file to be parsed.
#
# FILE SCHEMA:
# the file schema must be a comma separated csv with the following header and structure:
#
#	header: DESTINATION_STATE,CITY,INITIAL_POSTAL_CODE,FINAL_POSTAL_CODE,FARE_TYPE,INSURANTE_RATE,SP,RJ,MG,ES,PR,SC,RS,GO,DF,MS,MT,BA,SE,AL,PE,PB,RN,CE,PI,MA,TO,PA,AP,RR,AM,RO,AC
#	1º column: destination state, all capital letters with two letters only. Example: SP
#	2º column: city name, must not be empty. Example: SÃO PAULO
#	3º column: origin postal code, a 8 digits long number without any character that is not a number. Example: 03127070
#	4º column: destination postal code, a 8 digits long number without any character that is not a number. Example: 09999000
#	5º column: fare type, a string containing one of the following values: CAPITAL_1 or CAPITAL_2 or INTERIOR_1 or INTERIOR_2
#	6º column: insurance rate, an integer or decimal number, the floating point MUST be point and not comma and it must be less than 100. Example: 0.66 or 1 or 2
#	7 to 33º column: deadline, an integer number. Example: 8
#
# BE AWARE!!!
# the header columns MUST follow the variable EXPECTED_HEADER_ORDER order!!! If they dont the deadlines inserts values WILL BE WRONG.
# If they dont and its going to take to much effort to change the file order, remember to change their index (variables ending with _IDX) on the VARIABLES section and the variable EXPECTED_HEADER_ORDER with the new order of the file, this will do the work :D
#
# FILE SCHEMA EXAMPLE:
#
#   DESTINATION_STATE,CITY,INITIAL_POSTAL_CODE,FINAL_POSTAL_CODE,FARE_TYPE,INSURANCE_RATE,SP,RJ,MG,ES,PR,SC,RS,GO,DF,MS,MT,BA,SE,AL,PE,PB,RN,CE,PI,MA,TO,PA,AP,RR,AM,AC,RO
#	SP,São Paulo,03127060,03127070,INTERIOR_1,0.66,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27
#	SP,Guacamole,06666666,88888888,INTERIOR_1,0.66,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27
#
# EXECUTION EXAMPLE:
#
#	$ ./generate-coverage-inserts.sh my_file.csv
#
# ERROR CODES
#
#	- error code 1: file not found or without read permission
#	- error code 2: content of the file or the order of the header are invalid
# -------------------------------------------------------------------------------------------------------------------------------------- #
# Changelog:
#
#	v1.0
#		- 18/11/2021
#		- initial commit
#		- validate the file content
#		- generate jadlog_coverage and jadlog_deadline inserts and write it to an output file called inserts_result.sql
#
# -------------------------------------------------------------------------------------------------------------------------------------- #
# Tested at:
#	bash 5.0.17
# -------------------------------------------------------------------------------------------------------------------------------------- #

##########################################################################################################################################
# VARIABLES
##########################################################################################################################################

FILENAME="$1"
RESULT_FILE="inserts_result.sql"
COUNTER=$((1))
EXPECTED_HEADER_ORDER="DESTINATION_STATE,CITY,INITIAL_POSTAL_CODE,FINAL_POSTAL_CODE,FARE_TYPE,INSURANCE_RATE,SP,RJ,MG,ES,PR,SC,RS,GO,DF,MS,MT,BA,SE,AL,PE,PB,RN,CE,PI,MA,TO,PA,AP,RR,AM,AC,RO"
EXPECTED_NUMBER_OF_COLUMNS=33
DESTINATION_STATE_IDX=0
CITY_IDX=1
INITIAL_POSTAL_CODE_IDX=2
FINAL_POSTAL_CODE_IDX=3
FARE_TYPE_IDX=4
INSURANCE_RATE_IDX=5
DEFAULT_COLOR="\e[0m"
RED_BOLD="\033[031;1;1m"
YELLOW_BOLD="\033[033;1;1m"
GREEN_BOLD="\033[032;1;1m"

##########################################################################################################################################
# FUNCTIONS
##########################################################################################################################################

validateHeaderOrder() {

    actual_header_order=$(head -n 1 $FILENAME)

    [[ ! "$actual_header_order" = "$EXPECTED_HEADER_ORDER" ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR Header columns are not in the right order! The order of this columns MUST be in the correct order because if they don't the deadlines inserts are going to be created with wrong values. The expected order was $EXPECTED_HEADER_ORDER but the actual order was $actual_header_order" && exit 2

}

createStatesArray() {

    states=$(head -n 1 $FILENAME | cut -d ',' -f 7-33)
    IFS=',' read -ra STATES_ARRAY <<<"$states"

}

validateWholeFileContentAndWriteResultFile() {
    {
        read #jumping header line
        while read line; do

            echo -e "$YELLOW_BOLD[DEBUG] Processing line $(($COUNTER + 1)) $DEFAULT_COLOR"
            IFS=',' read -ra FIELDS <<<"$line"

            validateNumberOfColumns
            validateState ${FIELDS[$DESTINATION_STATE_IDX]}
            validateCity ${FIELDS[$CITY_IDX]}
            validatePostalCode ${FIELDS[$INITIAL_POSTAL_CODE_IDX]}
            validatePostalCode ${FIELDS[$FINAL_POSTAL_CODE_IDX]}
            validateFareType ${FIELDS[$FARE_TYPE_IDX]}
            validateInsuranceRate ${FIELDS[$INSURANCE_RATE_IDX]}
            validateDeadlines
            createJadlogCoverageInsert
            createJadlogDeadlineInserts "$line"
            ((COUNTER++))

        done
    } <$FILENAME

}

validateNumberOfColumns() {
    [[ ${#FIELDS[@]} -ne $EXPECTED_NUMBER_OF_COLUMNS ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR Number of fields in line $((COUNTER + 1)) is not valid. Actual number of fields was ${#FIELDS[@]} and expected number was 33" && exit 2
}

validateState() {
    local state=$1
    [[ ! $state =~ ^(SP|RJ|MG|ES|PR|SC|RS|GO|DF|MS|MT|BA|SE|AL|PE|PB|RN|CE|PI|MA|TO|PA|AP|RR|AM|AC|RO)$ ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR State $state at line $(($COUNTER + 1)) is not valid. States must contain only two UPPERCASE letters." && exit 2
}

validatePostalCode() {
    local postalCode=$1
    [[ ! $postalCode =~ ^[0-9]{8}$ ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR Postal code $postalCode at line $(($COUNTER + 1)) is not valid. Postal codes must contain 8 digits (digits only, do not use - )" && exit 2
}

validateCity() {
    local city=$1
    [[ -z $city ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR City name at line $(($COUNTER + 1)) cannot be empty" && exit 2
}

validateFareType() {
    local fareType=$1
    [[ ! $fareType =~ ^(INTERIOR_1|INTERIOR_2|CAPITAL_1|CAPITAL_2)$ ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR Fare type $fareType at line $(($COUNTER + 1)) is not a valid fare type. It must be one of the following: INTERIOR_1, INTERIOR_2, CAPITAL_1 or CAPITAL_2." && exit 2
}

validateInsuranceRate() {
    local insuranceRate=$1
    [[ ! $insuranceRate =~ ^[0-9]{1,2}(\.[0-9]+)?$ ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR Insurance rate $insuranceRate at line $(($COUNTER + 1)) is not a valid rate. Rates must be an integer or decimal number, if it's a decimal number the floating point must be a dot and it should less than 100" && exit 2
}

validateDeadlines() {

    for ((i = 6; i < ${#FIELDS[@]}; i++)); do
        [[ ! ${FIELDS[$i]} =~ ^[0-9]{1,2}$ ]] && echo -e "$RED_BOLD[FILE-VALIDATION-ERROR]$DEFAULT_COLOR Deadline ${FIELDS[$i]} at line $(($COUNTER + 1)) is not a valid deadline.Deadlines must be an integer less greater than 0 and less than 100" && exit 2
    done

}

createJadlogCoverageInsert() {

    local id=$COUNTER
    local fareType=${FIELDS[FARE_TYPE_IDX]}
    local insuranceRate=${FIELDS[INSURANCE_RATE_IDX]}
    local city=${FIELDS[CITY_IDX]}
    local state=${FIELDS[DESTINATION_STATE_IDX]}
    local postalcodeInitial=${FIELDS[INITIAL_POSTAL_CODE_IDX]}
    local postalcodeFinal=${FIELDS[FINAL_POSTAL_CODE_IDX]}

    local insert="INSERT INTO jadlog_coverage (id, fare_type, insurance_rate, city, state, postalcode_initial, postalcode_final) VALUES ($id, '$fareType', $insuranceRate, '$city', '$state', $postalcodeInitial, $postalcodeFinal);"

    echo $insert >>$RESULT_FILE
}

createJadlogDeadlineInserts() {

    local jadlogCoverageId=$COUNTER
    IFS=',' read -ra deadlines <<<$(echo "$line" | cut -d ',' -f 7-33)

    for ((i = 0; i < ${#deadlines[@]}; i++)); do
        echo "INSERT INTO jadlog_deadline (deadline, state, jadlog_coverage_id) VALUES (${deadlines[$i]}, '${STATES_ARRAY[$i]}', $jadlogCoverageId);" >>$RESULT_FILE
    done

}

##########################################################################################################################################
# TESTS
##########################################################################################################################################
[[ -z $1 ]] && echo -e "$RED_BOLD[ERROR]$DEFAULT_COLOR To use this program you must enter a file as parameter. Example: ./generate-coverage-inserts.sh my_file.csv. If you need, read this program documentation that is embedded in this script." && exit 1

if [ ! -f $FILENAME ] || [ ! -r $FILENAME ]; then
    echo -e "$RED_BOLD[ERROR]$DEFAULT_COLOR File not found or does not have read permission." && exit 1
fi

[[ -f "$RESULT_FILE" ]] && rm $RESULT_FILE

##########################################################################################################################################
# EXECUTION
##########################################################################################################################################

validateHeaderOrder

createStatesArray

validateWholeFileContentAndWriteResultFile

echo -e "$GREEN_BOLD[Success] Inserts file created: inserts_result.sql"
